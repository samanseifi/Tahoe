#!/bin/csh
# $Id: parallel.csh.template,v 1.7 2004/07/19 04:08:19 paklein Exp $
# 
# template for running the parallel benchmarks - this script only runs
# the benchmarks and verifies them with the comparator. It does not
# update any files or executables.
#

# username on Tahoe server
set TAHOE_USER =

# directory containing working copies of the tahoe modules
set W_DIR =

# host name - used only for subject line of test report
set HOST =

######### hopefully no changes will be required below #########

# benchmark directory
set BENCHMARK = ${W_DIR}/benchmark_XML

# set path
set path=(${BENCHMARK}/scripts /bin /usr/bin /usr/local/bin /usr/ccs/bin /usr/sbin /usr/local/ssh /usr/ucb /etc /usr/openwin/bin /project/local/bin $path)

# need an echo that handles escape characters \n
set ECHO = 'echo'

# CVS
setenv CVS_RSH ssh

# name of the Tahoe executable
set TAHOE = tahoe

# MPI stuff
set MPI_EXE      = ${W_DIR}/tahoe/tahoe 
set MPI_LAUNCH   = 'mpirun -np 4 '
set MPI_TEST_DIR = ${BENCHMARK}/level.3/parallel

# results summary file
set COMPARE_RESULTS = ${MPI_TEST_DIR}/compare.summary

###################### regression test ########################
#
# resolve test requestor - first command line argument of $TAHOE_USER
#
if ($#argv > 0) then
	set REQUESTOR = $1
else
	set REQUESTOR = $TAHOE_USER
endif
echo "running regression requested by: ${REQUESTOR}"
#
# run tests
#
if (-x ${W_DIR}/tahoe/${TAHOE} && -x ${BENCHMARK}/comparator/compare) then
	
	# run benchmarks
    cd ${MPI_TEST_DIR}
    ${ECHO}  "running BENCHMARKs..."
	make -s clean
	${MPI_LAUNCH} ${MPI_EXE} -f run.batch >&! test.stdout

	# test results 
    ${ECHO}  "running COMPARATOR..."
	if (-e ${COMPARE_RESULTS}) rm ${COMPARE_RESULTS}
	if (-e compare.console) rm compare.console
    ${BENCHMARK}/comparator/compare -f run.batch >&! compare.console

	# assess results
    if (! -e ${COMPARE_RESULTS}) then
    	# benchmarks did not run
		${ECHO} "BENCHMARKs failed"
		${ECHO} "Subject: TAHOE: regression FAIL ${HOST}" > ${BENCHMARK}/tmp_para
		${ECHO} "TAHOE regression FAIL:" `date` >> ${BENCHMARK}/tmp_para
		${ECHO} "test requested by: ${REQUESTOR}" >> ${BENCHMARK}/tmp_para
		cat ${BENCHMARK}/tmp_para ${MPI_TEST_DIR}/compare.console > ${BENCHMARK}/tmp_para_mail
	else if (`grep -c "FAIL" ${COMPARE_RESULTS}` ) then
		# test/s failed
		${ECHO} "BENCHMARKs failed"
		${ECHO} "Subject: TAHOE: regression FAIL ${HOST}" > ${BENCHMARK}/tmp_para
		${ECHO} "TAHOE regression FAIL:" `date` >> ${BENCHMARK}/tmp_para
		${ECHO} "test requested by: ${REQUESTOR}" >> ${BENCHMARK}/tmp_para
		cat ${BENCHMARK}/tmp_para ${COMPARE_RESULTS} > ${BENCHMARK}/tmp_para_mail
    else
    	# tests passed
		${ECHO} "BENCHMARKs passed"
		${ECHO} "Subject: TAHOE: regression PASS ${HOST}" > ${BENCHMARK}/tmp_para
		${ECHO} "TAHOE regression PASS:" `date` >> ${BENCHMARK}/tmp_para
		${ECHO} "test requested by: ${REQUESTOR}" >> ${BENCHMARK}/tmp_para
		cat ${BENCHMARK}/tmp_para ${COMPARE_RESULTS} > ${BENCHMARK}/tmp_para_mail
	endif
	
# build failed
else
	${ECHO} "Subject: TAHOE: build FAIL ${HOST}" > ${BENCHMARK}/tmp_para
	${ECHO} "TAHOE build FAIL:" `date` >> ${BENCHMARK}/tmp_para
	${ECHO} "test requested by: ${REQUESTOR}" >> ${BENCHMARK}/tmp_para
	cat ${BENCHMARK}/tmp_para ${W_DIR}/make.stderr > ${BENCHMARK}/tmp_para_mail
endif
#
# send it
#
scp ${BENCHMARK}/tmp_para_mail ${TAHOE_USER}@tahoe.ca.sandia.gov:/incoming/benchmark/mail.${HOST}
