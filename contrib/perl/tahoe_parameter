#!/usr/bin/perl -w
# this is a perl script to create a series of directories from
# template for tahoe batch run
# 
# The "stem" or prefix for all the files is taken from the directory
# name. this template directory must have
# 1) stem.in : the input file 
# with the appropriate input values tagged with <parameter_name> 
# 2) stem.geo : the geometry file
# 3) stem.parameters : the paramter control file with format:
#  Number_of_evaluations
#  Parameter_One min_value max_value
#  Parameter_Two min_value max_value
# etc
#
if (defined($ARGV[0])){
    $stem = $ARGV[0] ;   # template directory
	if (-e "$stem/$stem.in" && -e "$stem/$stem.geo" && -e "$stem/$stem.geo") {
	}
	else {
    	print "the files :\n";
		print " $stem/$stem.in\n $stem/$stem.geo\n $stem/$stem.parameters\n";
		print "must exist\n";
		exit;
	}
}
else {
    print "usage : tahoe_parameter [Tahoe template directory]\n";
    exit;
}

chdir $stem;
$infile = "$stem.parameters";
open(IN,$infile) || die "cannot open file $infile for reading : $!";
$_= <IN>;
chomp;
s/^\s+//;
s/\s+$//;
@list = split(/ +/);
$n_runs = $list[0];
while (<IN>) {
	chomp;
	s/^\s+//;
	s/\s+$//;
	@list = split(/ +/);
	push(@p_name, $list[0]);
	push(@p_min,$list[1]);
	push(@p_max,$list[2]);
}
close(IN);
chdir "..";

for ($tag=0; $tag< $n_runs +1; $tag++) {
	mkdir("$stem.$tag",0777) || die "cannot mkdir $stem.$tag: $!";
	chdir "$stem.$tag";
	symlink ("../$stem/$stem.geo","$stem.geo") 
		|| die "cannot create symlink $stem.geo\n";
#	system "ln -sf ../$stem/$stem.geo .";
	system "cp ../$stem/$stem.in .";
	$outfile = "$stem.p";
	open(OUT,">$outfile") || die "cannot create $outfile: $!";
	print "running Tahoe in $stem.$tag with :\n";
	for ($i=0; $i < $#p_name + 1 ; $i++) {
		$value = $p_min[$i] + $tag/$n_runs*($p_max[$i]-$p_min[$i]);
		print OUT "$p_name[$i] = $value\n";
		print "$p_name[$i] = $value\n";
	}				
	close(OUT);
# this is the "script" which gets run in the current working directory
	system "tpp $stem.in $stem.p > stdout; tahoe -f $stem.in > stdout";
	chdir "..";
}
