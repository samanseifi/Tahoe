# $Id: basics,v 1.1 2002/04/07 19:21:20 paklein Exp $
echo
echo "You can get a list of the console commands by typing 'help'"
wait 3
echo
help
echo
echo "Enter 'y' to stop now, 'n' to continue"
end

echo
echo "Notice some commands are defined for the 'console' and others"
echo "are define for the 'scope'. This interactive console consists"
echo "of a tree of 'listeners', each with its own set of commands."
echo "The 'scope' commands are the same for all. The scope commands"
echo "depend on what you're talking to."
echo
echo "Enter 'y' to stop now, 'n' to continue"
end

echo
echo "You can get a list of the 'variables' in the current scope by"
echo "typing 'list'..."
wait 3
echo
list
echo
echo "Like commands, the variables are also 'console' or 'scope'"
echo "Notice, there is one scope below this one called '0.0.frame'"
echo "This is the scope of the frame in the graphics display window."
echo
echo "Enter 'y' to stop now, 'n' to continue"
end

echo
echo "The frames can be identified using the 'ShowFrameNumbers' and"
echo "'HideFrameNumbers' commands. These toggle the label. Watch the"
echo "graphics window..."
ShowFrameNumbers
wait 1
HideFrameNumbers
wait 1
ShowFrameNumbers
wait 1
HideFrameNumbers
wait 1
ShowFrameNumbers
wait 1
HideFrameNumbers
wait 1
ShowFrameNumbers
wait 1
HideFrameNumbers
echo
echo "Enter 'y' to stop now, 'n' to continue"
end

echo
echo "You can get information about commands and variables with the"
echo "'help' command. For instance, 'help read'..."
echo
help read
wait 5
echo
echo "...returns information about the syntax for the 'read' command"
echo "as well as the values from the last time it was executed."
echo
echo "Enter 'y' to stop now, 'n' to continue"
end

echo
echo "The console tries to match names you type with the commands and"
echo "variables in the current scope. So this works 'he read'..."
echo
help read
echo
echo "Enter 'y' to stop now, 'n' to continue"
end

echo
echo "The 'help' command itself also attempts completion. This is helpful"
echo "if you can't remember the exact name of a command or variables. For"
echo "example, 'help ShowFr' returns..."
echo
help ShowFr
echo
echo "Enter 'y' to stop now, 'n' to continue"
end

echo
echo "If the console is unable to resolve a command or variable, you will"
echo "get a list of possible completions. Typing 'Sav' returns..."
echo
wait 3
Sav
echo
echo "Enter 'y' to stop now, 'n' to continue"
end

echo
echo "If the name can't be resolved at all, you'll get another message."
echo "For example, you might be tempted to try 'ls'..."
echo
wait 3
ls
echo
echo "Enter 'y' to stop now, 'n' to continue"
end

echo
echo "The last successfully completed command appears just to the left of"
echo "the '>' character in the command line prompt. Typing [return] repeats"
echo "the last successful command."
echo
echo "Enter 'y' to stop now, 'n' to continue"
end

echo
echo "The ':' character indicates a change of scope. Typing ':0.0.frame'"
echo "changes the current scope to the frame in the graphics display"
echo "window. The console also attempts completion for scope names, so"
echo "you can go to the frame scope by typing ':0.0'"
echo
echo "Enter 'y' to stop now, 'n' to continue"
end

echo
:0.0
echo "Typing 'help' in the frame scope returns the same 'console' commands,"
echo "but a different set of 'scope' commands..."
echo
wait 5
help
echo
echo "Enter 'y' to stop now, 'n' to continue"
end

echo
echo "The 'scope' command returns the name of the current scope"
echo
wait 3
echo
echo "Typing '::' sets the scope one level 'up'. The scope ':root' sets the"
echo "scope to the root of all listeners in the console."
echo
wait 3
:root
echo
echo "Enter 'y' to stop now, 'n' to continue"
end

echo
echo "Commands may be entered one per line, or multiple commands on a single"
echo "line separated by the ';' character. We can demonstrate this with the"
echo "'back' command. Typing ':0.0 ; scope ; back' returns..."
echo
wait 5
:0.0 ; scope ; back
wait 2
echo
echo "Here we:"
wait 1.5
echo "(1) set the current scope to ':0.0:frame'"
wait 3
echo "(2) listed the name of the current scope"
wait 2
echo "(3) used 'back' to return the last scope in which a command was executed"
echo
echo "Enter 'y' to stop now, 'n' to continue"
end
