$Id: ReadMe,v 1.3 2004/09/16 00:05:08 paklein Exp $

INSTALLATION:
See makefile.template for instructions for building this module. Tahoe 2.x
requires both the toolbox and expat modules. Optional components of the build 
are controlled by commenting/uncommenting the macros in the "build options" 
section of the makefile. Any optional modules that are enabled must be built 
before building this module. By default, the optional macros are set up to 
enable parsing of XML files using the expat library.  Parsing of XML files is 
required for version 2.x of tahoe. Many Linux systems include expat in the 
standard paths, i.e., in /usr/include and /usr/lib. The location of expat is 
set with the EXPAT_PREFIX macro. Sources for expat can be obtained from 
http://expat.sourceforge.net. An expat module, which wraps expat with a build 
system similar to the other tahoe modules, is available from the tahoe server 
(http://tahoe.ca.sandia.gov).

BUILDING WITHOUT THE PROVIDED MAKEFILE's:
The makefiles create a pair of headers that are neede to build the code. For
builds that do not use the makefiles, i.e., using IDE's such as CodeWarrior,
Xcode, Visual Studio, etc, a pair of templates for these headers is provided 
here:

    tahoe/src/config/ElementsConfig.h.tmpl
    tahoe/src/config/SolidMaterialsConfig.h.tmpl

Before building the code, copy each .h.tmpl file to a .h file and include the
file in the build system.

PRECOMPILED HEADERS (CodeWarrior):
Sources for generating precompiled headers are included in tahoe/src/pch:
	
    tahoe/src/pch/tahoe.MacOS.pch++
    tahoe/src/pch/tahoe.Win32.pch++

The precompiled headers are useful for the following:
(1) Precompiled headers dramatically speed compilation preprocessing commonly 
    used headers into a binary form. The headers included in the precompiled
    header are determined by the file
    
        tahoe/src/pch/tahoePrefix.h

(2) Some versions of CodeWarrior do not have a mechanism for defining symbols
    for the C preprocessor, as is normally done with -D[symbol] flags passed to
    command-line compilers. The "build options" section of makefile.template
    defines a number of these to define the configuration of the build. With
    CodeWarrior these symbols are defined using #define statements that are
    included in the precompiled header. A template for the symbols associated
    with the optional build components is located here:
    
    	tahoe/src/pch/tahoeOptions.h.template
    
    Before generating the precompiled header copy toolboxOptions.h.template to
    tahoeOptions.h and uncomment the #define statements for optional
    installed components. The tahoeOptions.h just defines symbols that are
    used by the C preprocessor. Paths to header files and libraries associated
    with the optional components must be set with the Project settings within
    CodeWarrior.
