/* $Id$ */
#ifndef _DEVELOPMENT_ELEMENTS_CONFIG_H_
#define _DEVELOPMENT_ELEMENTS_CONFIG_H_
/* This file was generated by MakeConfigHeaderFile.pl from DevelopmentElementsConfig.conf */
/* created: Sun Aug  2 01:12:34 EDT 2015 */

/** \file DevelopmentElementsConfig.h
 * Configuration of optional components within Tahoe.
 * Sections of the code are included or excluded in the build of Tahoe depending in 
 * this flags in this file and in the file DevelopmentElementsConfig.make. Each option has
 * a #define definition in this file and a corresponding directory definition
 * in DevelopmentElementsConfig.make. The two items must be set consistently to enable or
 * disable materials models. To enable an option:
 * -# in this file, uncomment the #define statement
 * -# in DevelopmentElementsConfig.make, uncomment the macro.
 *
 * The naming convention for the definitions in this file and the macros in
 * DevelopmentElementsConfig.make are as follows. For the option [OPTION]:
 * -# the symbol in this file will be [OPTION]
 * -# the macro defining the corresponding source directory will be DIRECTORY_[OPTION]
 */

/** \def BEM_ELEMENT_DEV
 * Boundary element method element.
 * This option must be set in conjunction with the DIRECTORY_BEM_ELEMENT_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define BEM_ELEMENT_DEV 1 */

/** \def PML_ELEMENT_DEV
 * Small strain, perfectly matched layer formulation.
 * This option must be set in conjunction with the DIRECTORY_PML_ELEMENT_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define PML_ELEMENT_DEV 1 */

/** \def COHESIVE_SURFACE_ELEMENT_DEV
 * Cohesive surface elements.
 * This option must be set in conjunction with the DIRECTORY_COHESIVE_SURFACE_ELEMENT_DEV macro
 * in DevelopmentElementsConfig.make. */
#define COHESIVE_SURFACE_ELEMENT_DEV 1

/** \def CONTACT_ELEMENT_DEV
 * Methods for enforcing contact constraints.
 * This option must be set in conjunction with the DIRECTORY_CONTACT_ELEMENT_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define CONTACT_ELEMENT_DEV 1 */

/** \def MULTISCALE_ELEMENT_DEV
 * Variational multi-scale method.
 * This option must be set in conjunction with the DIRECTORY_MULTISCALE_ELEMENT_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define MULTISCALE_ELEMENT_DEV 1 */

/** \def SOLID_ELEMENT_DEV
 * Solid elements and constitutive models.
 * This option must be set in conjunction with the DIRECTORY_SOLID_ELEMENT_DEV macro
 * in DevelopmentElementsConfig.make. */
#define SOLID_ELEMENT_DEV 1

/** \def MATERIAL_FORCE_ELEMENT_DEV
 * Material force formulations.
 * This option must be set in conjunction with the DIRECTORY_MATERIAL_FORCE_ELEMENT_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define MATERIAL_FORCE_ELEMENT_DEV 1 */

/** \def GRAD_SMALL_STRAIN_DEV
 * Gradient enhanced C1 small strain element.
 * This option must be set in conjunction with the DIRECTORY_GRAD_SMALL_STRAIN_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define GRAD_SMALL_STRAIN_DEV 1 */

/** \def MULTISCALE_APS_DEV
 * coupled FE implementation of anti-plane shear curl gradient plasticity.
 * This option must be set in conjunction with the DIRECTORY_MULTISCALE_APS_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define MULTISCALE_APS_DEV 1 */

/** \def SPLIT_INTEGRATION_DEV
 * split integration element.
 * This option must be set in conjunction with the DIRECTORY_SPLIT_INTEGRATION_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define SPLIT_INTEGRATION_DEV 1 */

/** \def SIMPLE_SOLID_DEV
 * simplied implementation of finite strain solid.
 * This option must be set in conjunction with the DIRECTORY_SIMPLE_SOLID_DEV macro
 * in DevelopmentElementsConfig.make. */
#define SIMPLE_SOLID_DEV 1

/** \def MULTISCALE_APS_V_DEV
 * coupled vector FE implementation of anti-plane shear curl gradient plasticity.
 * This option must be set in conjunction with the DIRECTORY_MULTISCALE_APS_V_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define MULTISCALE_APS_V_DEV 1 */

/** \def MESHFREE_GRAD_PLAST_DEV
 * meshfree implementation of gradient plasticity.
 * This option must be set in conjunction with the DIRECTORY_MESHFREE_GRAD_PLAST_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define MESHFREE_GRAD_PLAST_DEV 1 */

/** \def ENHANCED_STRAIN_LOC_DEV
 * enhanced strain embedded discontinuity element.
 * This option must be set in conjunction with the DIRECTORY_ENHANCED_STRAIN_LOC_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define ENHANCED_STRAIN_LOC_DEV 1 */

/** \def ENHANCED_STRAIN_LOC_DEV_CRAIG
 * enhanced strain embedded discontinuity element, 2nd version.
 * This option must be set in conjunction with the DIRECTORY_ENHANCED_STRAIN_LOC_DEV_CRAIG macro
 * in DevelopmentElementsConfig.make. */
/* #define ENHANCED_STRAIN_LOC_DEV_CRAIG 1 */

/** \def MIXTURE_THEORY_DEV
 * mixture theory.
 * This option must be set in conjunction with the DIRECTORY_MIXTURE_THEORY_DEV macro
 * in DevelopmentElementsConfig.make. */
#define MIXTURE_THEORY_DEV 1

/** \def BRIDGING_ELEMENT_DEV
 * multiscale bridging methods.
 * This option must be set in conjunction with the DIRECTORY_BRIDGING_ELEMENT_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define BRIDGING_ELEMENT_DEV 1 */

/** \def SURFACE_CB_DEV
 * Cauchy-Born approach to capture surface effects using pair potentials.
 * This option must be set in conjunction with the DIRECTORY_SURFACE_CB_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define SURFACE_CB_DEV 1 */

/** \def SURFACE_CB_EAM_DEV
 * Cauchy-Born approach to capture surface effects using EAM potentials.
 * This option must be set in conjunction with the DIRECTORY_SURFACE_CB_EAM_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define SURFACE_CB_EAM_DEV 1 */

/** \def SURFACE_CB_SI_DEV
 * Cauchy-Born approach to capture surface effects using Tersoff potentials.
 * This option must be set in conjunction with the DIRECTORY_SURFACE_CB_SI_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define SURFACE_CB_SI_DEV 1 */

/** \def SURFACE_CB_SI_DIMER_DEV
 * Cauchy-Born approach to capture {100} surface reconstructions in Silicon.
 * This option must be set in conjunction with the DIRECTORY_SURFACE_CB_SI_DIMER_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define SURFACE_CB_SI_DIMER_DEV 1 */

/** \def SURFACE_CB_WURTZITE_DEV
 * Cauchy-Born approach to capture surface effects using Tersoff-Abel potentials for Wurtzite lattices.
 * This option must be set in conjunction with the DIRECTORY_SURFACE_CB_WURTZITE_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define SURFACE_CB_WURTZITE_DEV 1 */

/** \def SURFACE_CB_ZB_DEV
 * Cauchy-Born approach to capture surface effects using Tersoff-Abel potentials for Zinc Blende lattices.
 * This option must be set in conjunction with the DIRECTORY_SURFACE_CB_ZB_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define SURFACE_CB_ZB_DEV 1 */

/** \def FLUID_ELEMENT_DEV
 * Incompressible Newtonian fluid element (constant density/dynamic viscosity).
 * This option must be set in conjunction with the DIRECTORY_FLUID_ELEMENT_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define FLUID_ELEMENT_DEV 1 */

/** \def FIBER_COMP_DEV
 * Updated Langriagian element with element level decription of fiber orientations.
 * This option must be set in conjunction with the DIRECTORY_FIBER_COMP_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define FIBER_COMP_DEV 1 */

/** \def SOLID_FLUID_MIX_DEV
 * 3D Total Lagrangian dynamic solid fluid mixture element.
 * This option must be set in conjunction with the DIRECTORY_SOLID_FLUID_MIX_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define SOLID_FLUID_MIX_DEV 1 */

/** \def SOLID_OPTIMIZATION_DEV
 * Implementation of the adjoint method for inverse elasticity problems.
 * This option must be set in conjunction with the DIRECTORY_SOLID_OPTIMIZATION_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define SOLID_OPTIMIZATION_DEV 1 */

/** \def DEM_COUPLING_DEV
 * 3D ellipsoidal particle discrete element for coupling.
 * This option must be set in conjunction with the DIRECTORY_DEM_COUPLING_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define DEM_COUPLING_DEV 1 */

/** \def PIEZOELECTRIC
 * piezoelectric element.
 * This option must be set in conjunction with the DIRECTORY_PIEZOELECTRIC macro
 * in DevelopmentElementsConfig.make. */
/* #define PIEZOELECTRIC 1 */

/** \def HUWASHIZU
 * Hu-Washizu element.
 * This option must be set in conjunction with the DIRECTORY_HUWASHIZU macro
 * in DevelopmentElementsConfig.make. */
/* #define HUWASHIZU 1 */

/** \def MICROMORPHIC_DEV
 * Micromorphic finite strain elastoplastic coupled element.
 * This option must be set in conjunction with the DIRECTORY_MICROMORPHIC_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define MICROMORPHIC_DEV 1 */

/** \def MICROMORPHIC2_DEV
 * Micromorphic finite strain elastoplastic coupled element, with changes.
 * This option must be set in conjunction with the DIRECTORY_MICROMORPHIC2_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define MICROMORPHIC2_DEV 1 */

/** \def MICROMORPHIC_CURR_CONFIG_DEV
 * Micromorphic finite strain elastoplastic coupled element, current configuration.
 * This option must be set in conjunction with the DIRECTORY_MICROMORPHIC_CURR_CONFIG_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define MICROMORPHIC_CURR_CONFIG_DEV 1 */

/** \def XFEM_DEV
 * extended finite element implementation for crack problems.
 * This option must be set in conjunction with the DIRECTORY_XFEM_DEV macro
 * in DevelopmentElementsConfig.make. */
/* #define XFEM_DEV 1 */

/** \def DIELECTRIC_ELASTOMER
 * Coupled electromechanical field equations for 3D dielectric elastomers.
 * This option must be set in conjunction with the DIRECTORY_DIELECTRIC_ELASTOMER macro
 * in DevelopmentElementsConfig.make. */
#define DIELECTRIC_ELASTOMER 1

/** \def DIELECTRIC_ELASTOMER_Q1P0
 * 3D Dielectric Elastomers with (hopefully) locking-free Q1P0 formulation.
 * This option must be set in conjunction with the DIRECTORY_DIELECTRIC_ELASTOMER_Q1P0 macro
 * in DevelopmentElementsConfig.make. */
#define DIELECTRIC_ELASTOMER_Q1P0 1

/** \def DIELECTRIC_ELASTOMER_Q1P0_ELASTOCAPILLARY
 * 3D Dielectric Elastomers with locking-free Q1P0 formulation and surface tension.
 * This option must be set in conjunction with the DIRECTORY_DIELECTRIC_ELASTOMER_Q1P0_ELASTOCAPILLARY macro
 * in DevelopmentElementsConfig.make. */
#define DIELECTRIC_ELASTOMER_Q1P0_ELASTOCAPILLARY 1

/** \def DIELECTRIC_ELASTOMER_Q1P0_VISCO
 * 3D Dielectric Elastomers with (hopefully) locking-free Q1P0 formulation and viscoelasticity.
 * This option must be set in conjunction with the DIRECTORY_DIELECTRIC_ELASTOMER_Q1P0_VISCO macro
 * in DevelopmentElementsConfig.make. */
#define DIELECTRIC_ELASTOMER_Q1P0_VISCO 1

/** \def DIELECTRIC_ELASTOMER_2D
 * Coupled electromechanical field equations for 2D dielectric elastomers.
 * This option must be set in conjunction with the DIRECTORY_DIELECTRIC_ELASTOMER_2D macro
 * in DevelopmentElementsConfig.make. */
#define DIELECTRIC_ELASTOMER_2D 1

/** \def DIELECTRIC_ELASTOMER_Q1P02D
 * 2D Dielectric Elastomers with (hopefully) locking-free Q1P0 formulation.
 * This option must be set in conjunction with the DIRECTORY_DIELECTRIC_ELASTOMER_Q1P02D macro
 * in DevelopmentElementsConfig.make. */
#define DIELECTRIC_ELASTOMER_Q1P02D 1

/** \def DIELECTRIC_ELASTOMER_VISCO
 * 3D dielectric elastomer with viscoelastic material behavior.
 * This option must be set in conjunction with the DIRECTORY_DIELECTRIC_ELASTOMER_VISCO macro
 * in DevelopmentElementsConfig.make. */
/* #define DIELECTRIC_ELASTOMER_VISCO 1 */

/** \def DIELECTRIC_ELASTOMER_2D_VISCO
 * 2D dielectric elastomer with viscoelastic material behavior.
 * This option must be set in conjunction with the DIRECTORY_DIELECTRIC_ELASTOMER_2D_VISCO macro
 * in DevelopmentElementsConfig.make. */
/* #define DIELECTRIC_ELASTOMER_2D_VISCO 1 */

#endif
