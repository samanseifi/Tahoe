#include "FSDE_inc_2D.h"

#include <cmath>

static double z[40];

/* function to compute mechanical modulus */
void get_ddCmech_2D(const double* params, const double *Xsi, const double* Cmat, double* dCdC) { 

/* common definitions */
#include "FSDE_common_defines_2D.h"
	
	/* Stress code */
	z[1] = C11*C11;
	z[2] = pow(C11,3.);
	z[3] = C12*C12;
	z[4] = pow(C12,3.);
	z[5] = -C12*C21;
	z[6] = C11*C22;
	z[7] = C22*C22;
	z[8] = pow(C22,3.);
	z[9] = C11 + C22;
	z[10] = ex*ex;
	z[11] = ey*ey;
	z[12] = 1./(Nrig*Nrig);
	z[13] = 1./Nrig;
	z[13] = 0.1*z[13];
	z[5] = z[5] + z[6];
	z[9] = 0.06285714285714286*z[12]*z[9];
	z[12] = pow(z[5],-3.);
	z[5] = 1./(z[5]*z[5]);
	z[9] = z[13] + z[9];
	z[13] = 2.*z[12];
	z[14] = C12*ex*ey*z[12];
	z[15] = C21*ex*ey*z[12];
	z[16] = -2.*C12*z[1]*z[11]*z[12];
	z[17] = C11*ex*ey*z[5];
	z[18] = -2.*C12*ex*ey*z[5];
	z[19] = C12*ex*ey*z[5];
	z[20] = C21*ex*ey*z[5];
	z[21] = C22*ex*ey*z[5];
	z[22] = -2.*C11*z[10]*z[5];
	z[23] = C12*z[10]*z[5];
	z[24] = -2.*C22*z[10]*z[5];
	z[25] = -2.*C11*z[11]*z[5];
	z[26] = C12*z[11]*z[5];
	z[5] = -2.*C22*z[11]*z[5];
	z[9] = mu*z[9];
	z[27] = C12*C21*ex*ey*z[13];
	z[28] = C22*z[1]*z[10]*z[13];
	z[29] = C22*z[1]*z[11]*z[13];
	z[2] = z[11]*z[13]*z[2];
	z[30] = -2.*z[1]*z[14];
	z[1] = -2.*z[1]*z[15];
	z[31] = C11*ex*ey*z[13]*z[3];
	z[32] = C22*ex*ey*z[13]*z[3];
	z[33] = C22*z[10]*z[13]*z[3];
	z[34] = C11*z[11]*z[13]*z[3];
	z[3] = -2.*z[15]*z[3];
	z[35] = C11*z[27];
	z[27] = C22*z[27];
	z[4] = -2.*ex*ey*z[12]*z[4];
	z[36] = -2.*C12*z[10]*z[12]*z[6];
	z[37] = -2.*C12*z[11]*z[12]*z[6];
	z[38] = -2.*z[14]*z[6];
	z[6] = -2.*z[15]*z[6];
	z[12] = -2.*C12*z[10]*z[12]*z[7];
	z[39] = C11*z[10]*z[13]*z[7];
	z[11] = C11*z[11]*z[13]*z[7];
	z[14] = -2.*z[14]*z[7];
	z[7] = -2.*z[15]*z[7];
	z[8] = z[10]*z[13]*z[8];
	z[1] = z[1] + z[2] + z[22] + z[28] + z[30];
	z[2] = z[18] + z[3] + z[33] + z[34] + z[4];
	z[3] = z[16] + z[17] + z[23] + z[31] + z[35] + z[36];
	z[4] = z[12] + z[21] + z[26] + z[27] + z[32] + z[37];
	z[6] = z[19] + z[20] + z[24] + z[25] + z[29] + z[38] + z[39] + z[6];
	z[5] = z[11] + z[14] + z[5] + z[7] + z[8];
	z[7] = -0.5*epsilon;
	z[1] = z[1]*z[7];
	z[2] = z[2]*z[7];
	z[3] = z[3]*z[7];
	z[4] = z[4]*z[7];
	z[6] = z[6]*z[7];
	z[5] = z[5]*z[7];
	z[1] = z[1] + z[9];
	z[6] = z[6] + z[9];
	z[5] = z[5] + z[9];

	/* dCdC: 3 x 3 */
	dCdC[ 0] = z[5];
	dCdC[ 1] = z[6];
	dCdC[ 2] = z[4];
	
	dCdC[ 3] = z[6];
	dCdC[ 4] = z[1];
	dCdC[ 5] = z[3];

	dCdC[ 6] = z[4];
	dCdC[ 7] = z[3];
	dCdC[ 8] = z[2];
}
