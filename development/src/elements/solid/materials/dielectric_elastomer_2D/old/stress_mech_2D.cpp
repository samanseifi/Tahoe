// Arruda-Boyce 2D stress
#include "FSDE_inc_2D.h"
#include <cmath>
static double z[45];

/* function to compute mechanical stress */
void get_dUdCmech_2D(const double* params, const double *Xsi, const double* Cmat, double* dUdC) { 

/* common definitions */
#include "FSDE_common_defines_2D.h"
	
	/* Stress code */
	z[1] = -C12*C21;
	z[2] = C11*C22;
	z[3] = pow(Nrig,-4.);
	z[4] = pow(Nrig,-3.);
	z[5] = 1./(Nrig*Nrig);
	z[6] = 1./Nrig;
	z[1] = z[1] + z[2];
	z[2] = 1./(z[1]*z[1]);
	z[1] = 1./z[1];
	z[7] = -z[2];
	z[8] = C11*z[7];
	z[7] = C22*z[7];
	z[9] = 0.5*C12*z[2];
	z[10] = 0.5*C21*z[2];
	z[1] = C11 + C22 + z[1];
	z[8] = 1. + z[8];
	z[7] = 1. + z[7];
	z[11] = z[1]*z[1];
	z[12] = pow(z[1],3.);
	z[13] = pow(z[1],4.);
	z[14] = 0.1*z[1]*z[2]*z[6];
	z[15] = C12*z[14];
	z[14] = C21*z[14];
	z[16] = 0.5*z[8];
	z[17] = 0.5*z[7];
	z[18] = 0.0038515769944341373*z[13]*z[3]*z[8];
	z[19] = 0.0038515769944341373*z[13]*z[3]*z[7];
	z[20] = 0.010857142857142857*z[12]*z[4]*z[8];
	z[21] = 0.010857142857142857*z[12]*z[4]*z[7];
	z[22] = 0.03142857142857143*z[11]*z[5]*z[8];
	z[23] = 0.03142857142857143*z[11]*z[5]*z[7];
	z[8] = 0.1*z[1]*z[6]*z[8];
	z[1] = 0.1*z[1]*z[6]*z[7];
	z[6] = 0.0038515769944341373*C12*z[13]*z[2]*z[3];
	z[3] = 0.0038515769944341373*C21*z[13]*z[2]*z[3];
	z[7] = 0.010857142857142857*C12*z[12]*z[2]*z[4];
	z[4] = 0.010857142857142857*C21*z[12]*z[2]*z[4];
	z[12] = 0.03142857142857143*C12*z[11]*z[2]*z[5];
	z[2] = 0.03142857142857143*C21*z[11]*z[2]*z[5];
	z[5] = z[16] + z[18] + z[20] + z[22] + z[8];
	z[1] = z[1] + z[17] + z[19] + z[21] + z[23];
	z[6] = z[12] + z[15] + z[6] + z[7] + z[9];
	z[2] = z[10] + z[14] + z[2] + z[3] + z[4];
	z[3] = mu*z[5];
	z[1] = mu*z[1];
	z[4] = mu*z[6];
	z[2] = mu*z[2];

	/* return values */
	dUdC[0] = z[1];
	dUdC[1] = z[4];
	dUdC[2] = z[2];
	dUdC[3] = z[3];
}
